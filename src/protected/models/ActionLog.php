<?php

/**
 * Логи действий пользователей, вносятся тогда, когда и Flash сообщения
 * 
 * @property User $user Пользователь
 * @property SimpleAdmin $admin Администратор
 * @autogenerated 15-07-2019 Merged
 */
class ActionLog extends ActiveRecord
{
    const TYPE_ERROR_NOTIFICATION = "danger";

    /**
     * Первичный ключ
     * 
     * @var Integer
     * @autogenerated 15-07-2019
     */
    public $id;

    /**
     * Тип сообщения
     * 
     * @var String
     * @autogenerated 15-07-2019
     */
    public $type = '';

    /**
     * Текст сообщения
     * 
     * @var String
     * @autogenerated 15-07-2019
     */
    public $text;


    /**
     * Стек вызовов функций
     *
     * @var String
     * @autogenerated 15-07-2019
     */
    public $backtrace = null;

    /**
     * Пользователь
     * <b>Внешний ключ.</b>
     * 
     * @update CASCADE
     * @delete CASCADE
     * @var Integer
     * @autogenerated 15-07-2019
     */
    public $userId = null;

    /**
     * Администратор
     * <b>Внешний ключ.</b>
     *
     * @update CASCADE
     * @delete CASCADE
     * @var Integer
     * @autogenerated 15-07-2019
     */
    public $adminId = null;

    /**
     * Данные Запроса
     * 
     * @var String
     * @autogenerated 15-07-2019
     */
    public $requestData;

    /**
     * Данные Сервера
     * 
     * @var String
     * @autogenerated 15-07-2019
     */
    public $serverData;

    /**
     * Адрес страницы
     * 
     * @var String
     * @autogenerated 15-07-2019
     */
    public $url = null;

    /**
     * Комментарий
     * 
     * @var String
     * @autogenerated 15-07-2019
     */
    public $comment = null;

    /**
     * Обработана ли ошибка
     * 
     * @var Boolean
     * @autogenerated 15-07-2019
     */
    public $processed = false;

    /**
     * Дата создания
     * 
     * @sqltype DATETIME
     * @var String
     * @autogenerated 15-07-2019
     */
    public $creationDate;

    public function __construct($scenario = 'insert')
    {
        $this->creationDate = DateTimeHelper::timestampToMysqlDateTime();
        parent::__construct($scenario);
    
    }
    
    /**
     *  Возвращает правила валидации.
     * <b>Внимание: для полей у которых в БД тип VARCHAR необходимо создать валидатор "length".</b>
     * 
     * @return Array[] Массив правил валидации
     * @autogenerated 15-07-2019 Merged
     */
    public function rules()
    {
        $arr = parent::rules();
        $arr[] = array('type, text, requestData, serverData, creationDate','required');
        $arr[] = array('processed','boolean');
        $arr[] = array('userId, adminId','numerical','integerOnly' => true);
        $arr[] = array('creationDate','type','type' => 'datetime','datetimeFormat' => 'yyyy-MM-dd hh:mm:ss');
        $arr[] = array('type','length','max' => 100);
        $arr[] = array("comment","safe");
        return $arr;
    }
    
    /**
     * Возвращает массив связей моделей.
     * <b>Внимание: связи BELONGS_TO являются внешними ключами.</b> Для них можно указать поведение при удалений родительской сущности.
     * 
     * @return Array[] Массив связей
     * @autogenerated 15-07-2019 Merged
     */
    public function relations()
    {
        $arr = parent::relations();
        $arr["user"] = array(self::BELONGS_TO, 'User', 'userId');
        $arr["admin"] = array(self::BELONGS_TO, 'SimpleAdmin', 'adminId');
        return $arr;
    }
    
    /**
     * Возвращает информацию о том, как называются поля на человеческом языке.
     * 
     * @return String[] Массив лейблов для полей (name=>label)
     * @autogenerated 15-07-2019 Merged
     */
    public function attributeLabels()
    {
        $arr = parent::attributeLabels();
        $arr["id"] = "Id";
        $arr["type"] = "Type";
        $arr["text"] = "Text";
        $arr["userId"] = "User";
        $arr["requestData"] = "Request data";
        $arr["serverData"] = "Server data";
        $arr["url"] = "Url";
        $arr["comment"] = "Comment";
        $arr["processed"] = "Processed";
        $arr["creationDate"] = "Creation date";
        $arr["adminId"] = "Admin";
        return $arr;
    }

    /**
     * Получение имени таблицы в базе данных
     * 
     * @autogenerated 15-07-2019
     * @return String Название таблицы
     */
    public function tableName()
    {
        return 'actionlogs';
    }

    public function getEmail()
    {
        if($this->user)
        {
            return $this->user->email;
        }
        if($this->admin)
        {
            return $this->admin->email;
        }
        return null;
    }
 
}