<?php

/**
 * Обратная связь с главной страницы
 * 
 * @autogenerated 25-08-2017
 */
class Feedback extends ActiveRecord
{
    /**
     * Первичный ключ
     * 
     * @var Integer
     * @autogenerated 25-08-2017
     */
    public $id;

    /**
     * Email клиента
     * 
     * @var String
     * @autogenerated 25-08-2017
     */
    public $email = null;

    /**
     * Имя
     * 
     * @var String
     * @autogenerated 25-08-2017
     */
    public $name = null;
    
    /**
     * Фамилия
     * 
     * @var String
     * @autogenerated 25-08-2017
     */
    public $surname = null;

    /**
     * Телефон
     * 
     * @var String
     * @autogenerated 25-08-2017
     */
    public $phone = null;

    /**
     * Текстовое сообщение
     * 
     * @var String
     * @autogenerated 25-08-2017
     */
    public $message = null;
    
    
             /**
     * Дата создания
     * 
     * @sqltype DATETIME
     * @var String
     * @autogenerated 09-01-2017
     */
    public $creationDate;
    
    
         public function __construct($scenario = 'insert')
    {
        $this->creationDate = DateTimeHelper::timestampToMysqlDateTime();
        parent::__construct($scenario);
    }
    


    
    /**
     *  Возвращает правила валидации.
     * <b>Внимание: для полей у которых в БД тип VARCHAR необходимо создать валидатор "length".</b>
     * 
     * @autogenerated 25-08-2017
     * @return Array[] Массив правил валидации
     */
    public function rules()
    {
        $arr = parent::rules();
        $arr[] = array('email, name, phone, message,surname','safe');
        $arr[] = array('email','email');
        $arr[] = array('email, name, phone','required');
        $arr[] = ['phone','match','pattern'=>"/^[0-9\+\(\)]{3,15}$/","message"=>"Phone number entered incorrectly"];
        return $arr;
    }
    

    



    /**
     * Возвращает массив связей моделей.
     * <b>Внимание: связи BELONGS_TO являются внешними ключами.</b> Для них можно указать поведение при удалений родительской сущности.
     * 
     * @autogenerated 25-08-2017
     * @return Array[] Массив связей
     */
    public function relations()
    {
        $arr = parent::relations();
        return $arr;
    }
    
    /**
     * Возвращает информацию о том, как называются поля на человеческом языке.
     * 
     * @autogenerated 25-08-2017
     * @return String[] Массив лейблов для полей (name=>label)
     */
    public function attributeLabels()
    {
        $arr = parent::attributeLabels();
        $arr["id"] = "Id";
        $arr["email"] = "Email";
        $arr["name"] = "Name";
        $arr["phone"] = "Phone number";
        $arr["message"] = "Message";
        return $arr;
    }
    
    /**
     * Возвращает новую модель данного класса. 
     * Этот метод необязателен, но улучшает работу подсказок.
     * 
     * @autogenerated 25-08-2017
     * @param String $className Имя класса модели
     * @return Feedback пустой объект модели
     */
    public static function model($className = __CLASS__)
    {
        return parent::model($className);
    }
    
    
    
    /**
     * Получение имени таблицы в базе данных
     *
     * @autogenerated 25-08-2017
     * @return String Название таблицы
     */
    public function tableName()
    {
        return 'feedbacks';
    }  

 
}