<?php

namespace Hs\Redmine;

/**
 * Проект Redmine	
 *
 * @package Hs\Redmine
 * @property Hs\Redmine\User[] $users
 * @property Hs\Redmine\Issue[] $issues
 * @author Sarychev Alexei <freddis336@gmail.com>
 */
class Project extends \RemappedActiveRecord
{

    public $identifier = '';
    public $title;

    /**
     * Первичный ключ
     * 
     * @var Integer
     * @autogenerated 13-06-2016
     */
    public $id;

    /**
     * Получение имени таблицы в базе данных
     *
     * @autogenerated 13-06-2016
     * @return String Название таблицы
     */
    public function tableName()
    {
        return 'redmine.projects';
    }

    public function relations()
    {
        $arr = parent::relations();
        $arr["users"] = [self::MANY_MANY, "Hs\Redmine\User", "members(project_id,user_id)"];
        $arr["issues"] = [self::HAS_MANY, "Hs\Redmine\Issue", "project_id"];
        return $arr;
    }

    /**
     * Получение массива конвертации имен полей
     * @return string[]
     */
    public function getMappings()
    {
        $arr = array();
        $arr['name'] = "title";
        return $arr;
    }

    /**
     * Получает значение дополнительного поля для проекта. Такие поля могут добавлять администраторы.
     * 
     * @param String $name Название дополнительного поля
     * @return String| null Значение дополнительного поля
     */
    public function getCustomField($name)
    {
        $attrs = ["title" => $name, "type" => CustomField::TYPE_PROJECT];
        $field = CustomField::model()->findByAttributes($attrs);
        if (!$field)
        {
            return null;
        }
        $attrs2 = ["fieldId" => $field->getPk(), "objectId" => $this->getPk()];
        $value = CustomValue::model()->findByAttributes($attrs2);
        if (!$value)
        {
            return null;
        }

        return $value->value;
    }

}
