<?php

/**
 * Администраторы проекта
 * 
 * @package Hs\Models
 * @autogenerated 24-06-2016
 */
class SimpleAdmin extends BaseUser
{
    /**
     * Возвращает имя пользователя для отображения
     * 
     * @return String
     */
    public function getTitle()
    {
	return $this->getLogin();
    }

    /**
     *  Возвращает правила валидации.
     * <b>Внимание: для полей у которых в БД тип VARCHAR необходимо создать валидатор "length".</b>
     * 
     * @autogenerated 24-06-2016
     * @return Array[] Массив правил валидации
     */
    public function rules()
    {
        $arr = parent::rules();
        $arr[] = array('isVerified','boolean');
        $arr[] = array('name, email, password, creationDate','required');
        $arr[] = array('creationDate, emailConfirmDate','type','type' => 'datetime','datetimeFormat' => 'yyyy-MM-dd hh:mm:ss');
        $arr[] = array('name, email','length','max' => 64);
        $arr[] = array('password','length','max' => 32);
        return $arr;
    }
    
    /**
     * Возвращает массив связей моделей.
     * <b>Внимание: связи BELONGS_TO являются внешними ключами.</b> Для них можно указать поведение при удалений родительской сущности.
     * 
     * @autogenerated 24-06-2016
     * @return Array[] Массив связей
     */
    public function relations()
    {
        $arr = parent::relations();
        return $arr;
    }
    
    /**
     * Возвращает информацию о том, как называются поля на человеческом языке.
     * 
     * @autogenerated 24-06-2016
     * @return String[] Массив лейблов для полей (name=>label)
     */
    public function attributeLabels()
    {
        $arr = parent::attributeLabels();
        $arr["id"] = "Id";
        $arr["fullname"] = "Fullname";
        $arr["name"] = "Name";
        $arr["email"] = "Email";
        $arr["password"] = "Password";
        $arr["creationDate"] = "Creation date";
        $arr["isVerified"] = "Is verified";
        $arr["code"] = "Code";
        $arr["phoneNumber"] = "Phone number";
        $arr["address"] = "Address";
        $arr["emailConfirmDate"] = "Email confirm date";
        return $arr;
    }
    
    /**
     * Возвращает новую модель данного класса. 
     * Этот метод необязателен, но улучшает работу подсказок.
     * 
     * @autogenerated 24-06-2016
     * @param String $className Имя класса модели
     * @return Admin пустой объект модели
     */
    public static function model($className = __CLASS__)
    {
        return parent::model($className);
    }
    
    /**
     * Получение имени таблицы в базе данных
     *
     * @autogenerated 24-06-2016
     * @return String Название таблицы
     */
    public function tableName()
    {
        return 'admins';
    }
    
   
}